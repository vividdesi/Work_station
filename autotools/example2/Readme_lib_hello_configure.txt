To build a **dynamic/shared library** with Autotools, I'll walk you through an example project structure where we create a shared library (`libmath.so`) and link it to a simple program. This example will show the necessary files for both the **dynamic library** and a **program** that uses it.

---

### **Directory Structure for the Example**
```
libmath/
├── src/
│   ├── mathlib.c
│   └── mathlib.h
├── main.c
├── configure.ac
├── Makefile.am
└── README (optional)
```

---

### **1. `src/mathlib.c`** (Library Source)
This file will contain the implementation of the shared library.

```c
#include "mathlib.h"
#include <stdio.h>

void add(int a, int b) {
    printf("The sum is: %d\n", a + b);
}
```

---

### **2. `src/mathlib.h`** (Library Header)
This is the header file for the shared library.

```c
#pragma once

void add(int a, int b);
```

---

### **3. `main.c`** (Program that uses the Shared Library)
This program will use the shared library to perform the addition.

```c
#include "mathlib.h"

int main() {
    add(3, 5);
    return 0;
}
```

---

### **4. `configure.ac`**
This file configures the build system, checks for required tools, and generates the `configure` script.

```bash
AC_INIT([libmath], [1.0], [youremail@example.com])
AM_INIT_AUTOMAKE([-Wall -Werror foreign])
AC_PROG_CC
LT_INIT  # Initializes libtool support for shared libraries
AC_CONFIG_FILES([Makefile])
AC_OUTPUT
```

- **`LT_INIT`** is crucial as it initializes the libtool support for creating shared libraries.

---

### **5. `Makefile.am`**
This is the Automake file that defines how the shared library and the program are built.

```makefile
# Specify the program to be built
bin_PROGRAMS = myprogram

# Specify the sources for the program
myprogram_SOURCES = main.c

# Link the program to the shared library
myprogram_LDADD = libmath.la

# Define the shared library
lib_LTLIBRARIES = libmath.la

# Sources for the shared library
libmath_la_SOURCES = src/mathlib.c src/mathlib.h

# Set version info for the shared library (optional)
libmath_la_LDFLAGS = -version-info 1:0:0
```

### **Explanation:**
1. **`bin_PROGRAMS = myprogram`:**
   - Specifies the program to be built (`myprogram`).

2. **`myprogram_SOURCES = main.c`:**
   - Lists the source file for the program.

3. **`myprogram_LDADD = libmath.la`:**
   - Links the program with the shared library `libmath.la`.

4. **Shared Library (`libmath.la`):**
   - **`lib_LTLIBRARIES = libmath.la`:** Defines the shared library.
   - **`libmath_la_SOURCES = src/mathlib.c src/mathlib.h`:** Specifies the source files for the shared library.
   - **`libmath_la_LDFLAGS = -version-info 1:0:0`:** Sets version information for the library (optional).

---

### **Steps to Build the Project:**

1. **Run Autotools to Generate the Build System:**
   In the project directory, run the following commands:

   ```bash
   aclocal
   autoconf
   automake --add-missing
   ```

2. **Run the `configure` Script:**
   This step prepares the `Makefile` for your platform.

   ```bash
   ./configure
   ```

3. **Build the Project:**
   Now, you can build the program and shared library using `make`:

   ```bash
   make
   ```

4. **Run the Program:**
   After building, you can run the program:

   ```bash
   ./myprogram
   ```

   **Expected Output:**
   ```
   The sum is: 8
   ```

---

### **Files Generated by Autotools:**
- **`Makefile`**: The build instructions, generated by `./configure`.
- **`libmath.so`**: The shared library.
- **`myprogram`**: The program executable.

---

### **Summary of the Process:**
1. **`configure.ac`**: Configures the environment and sets up the `configure` script.
2. **`Makefile.am`**: Automake instructions to build the shared library (`libmath.la`) and program (`myprogram`).
3. **`mathlib.c` and `mathlib.h`**: The source and header files for the shared library.
4. **`main.c`**: The program that uses the shared library.

---

With this setup, you can easily create a shared library (`libmath.so`) and link it with your program. Let me know if you need further help or clarifications!
